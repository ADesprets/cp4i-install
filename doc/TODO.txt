--- TODO 0 --- APIC Initial Configuration ---
Configure OpenLDAP Arnauld + Saad

Create Catalogs
Clear Ping API
Load test API (Ping API) as a draft

--- TODO 1 --- Manque DP capabilities
--- TODO 2 --- Improve README  ---
--- TODO 3 --- Improve code documentation  ---
--- TODO 4 --- E2E Initial Customisation ---
	ES:
		TOPICs
	MQ:
		MQ Queue Managers
		Create native HA cluster
	APIC: 
		Manage 404 if not present
		Add a route to DataPower Gateway console
		Load Taxi Locator/... (call-back-end-simulator_1.0.0.yaml, flightlandings_1.0.0.yaml, passenger_1.0.0.zip, passenger_airshopping-v02.wsdl_1.0.0.zip, taxi-locator_1.0.0.yaml, taxi-messaging_1.0.0.yaml)
		Create OAuth
		Create LDAP user registry
		Create Fake Authentication API, publish it in prod, create a corg, create an app and create a subscription to the fake authentication API.
		Create users from LDAP entries
		Check why analytics is not working
	ACE:

	LDAP:
		Review list of users, merge Saad entries
		Display ldapsearch command

	Load simulator application for taxi test
		Container eem-demo-rest-apis, quay.io/dale-lane/eem-demo-apis
--- TODO 5 --- Create/Extract all certificates for Web UI ---
		Need a few certificate to get it including gateway, login, cdp, ... Attention the nginx is passthrough
--- TODO 6 --- Harmoniser les commandes soit en oc only soit oc + jq (avoid strings manipulation) ---
--- TODO 7 --- VÃ©rifier l'idempotence ---
--- TODO 8 --- Check Daffy (wget http://get.daffy-installer.com/download-scripts/daffy-init.sh; chmod 777 daffy-init.sh;./daffy-init.sh ) and also https://production-gitops.dev/ and https://ibm.github.io/cloud-pak-deployer/
--- TODO 9 --- Test TerraForm
--- TODO 10 --- VPC versus Classic Infrastructure
--- TODO 11 --- Envoie email (voir Joel Gomez)

	ibmcloud https://cloud.ibm.com/docs/cli?topic=cli-getting-started
	ibmcloud plugin install container-service vpc-infrastructure
	oc https://docs.openshift.com/container-platform/4.11/cli_reference/openshift_cli/getting-started-cli.html
	brew install openshift-cli
--- TODO 12 --- Check if reuse from https://github.ibm.com/kskhong/terraform-cp4i
--- TODO 13 --- Variabiliser le stockage pour les capabilities


------------------------------------------------------------
Yaml to create a topic resource
------------------------------------------------------------
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: my-topic
  labels:
    strimzi.io/cluster: my-cluster  # Replace with your Kafka cluster name
spec:
  partitions: 3
  replicas: 3
------------------------------------------------------------
Creation of the topic
------------------------------------------------------------
oc apply -f my-topic.yaml
------------------------------------------------------------
Validation and get topics
------------------------------------------------------------
oc get kafkatopics
------------------------------------------------------------
Yaml for user
------------------------------------------------------------
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaUser
metadata:
  name: my-user
  labels:
    strimzi.io/cluster: my-cluster  # Replace with your Kafka cluster name
spec:
  authentication:
    type: tls
  authorization:
    acls:
    - resource:
        type: topic
        name: my-topic  # Replace with the topic name you want to grant access to
      operation: Read
    - resource:
        type: topic
        name: my-topic  # Replace with the topic name you want to grant access to
      operation: Write

------------------------------------------------------------
Validation and get users
------------------------------------------------------------
oc get kafkausers
------------------------------------------------------------

