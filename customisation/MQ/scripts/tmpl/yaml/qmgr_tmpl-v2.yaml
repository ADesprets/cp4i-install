apiVersion: v1
kind: Secret
metadata:
  name: ${QMGR}-secret
  namespace: $MY_OC_PROJECT
data:
  tls.crt: $B64_QMGR_CRT
  tls.key: $B64_QMGR_KEY
  ca.crt: $B64_CA_CRT
type: kubernetes.io/tls
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${QMGR}-mywebconfig
  namespace: $MY_OC_PROJECT
data:
  mqwebuser.xml: "<server><featureManager><feature>appSecurity-2.0</feature><feature>basicAuthenticationMQ-1.0</feature></featureManager><enterpriseApplication id=\"com.ibm.mq.console\"><application-bnd><security-role name=\"MQWebAdmin\"><user name=\"mqadmin\" /><group name=\"mqadmins\" /></security-role><security-role name=\"MQWebAdminRO\"><user name=\"mqreader\" /></security-role></application-bnd></enterpriseApplication><basicRegistry id=\"basic\" realm=\"defaultRealm\"><user name=\"mqadmin\" password=\"Passw0rd!\"/><user name=\"mqreader\" password=\"mqreader\"/><group name=\"MQWebAdminGroup\"><member name=\"mqadmin\"/></group></basicRegistry></server>"
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: ${QMGR}-route
  namespace: $MY_OC_PROJECT
spec:
  host: ${CHL}.chl.mq.ibm.com
  to:
    kind: Service
    name: ${QMGR}-ibm-mq
  port:
    targetPort: 1414
  tls:
    termination: passthrough
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${QMGR}-mqsc-cm
  namespace: $MY_OC_PROJECT
data:
  ${QMGR}.mqsc: |
    DEFINE QLOCAL('Q1') REPLACE DEFPSIST(YES) 
    DEFINE QLOCAL('TO.KAFKA') REPLACE DEFPSIST(YES) 
    DEFINE QLOCAL('FROM.KAFKA') REPLACE DEFPSIST(YES) 
    DEFINE CHANNEL('${QMGR_UC}CHL') CHLTYPE(SVRCONN) REPLACE TRPTYPE(TCP) SSLCAUTH(OPTIONAL) SSLCIPH('ANY_TLS12_OR_HIGHER')
    SET CHLAUTH('${QMGR_UC}CHL') TYPE(BLOCKUSER) USERLIST(NOBODY) ACTION(ADD)
---
apiVersion: mq.ibm.com/v1beta1
kind: QueueManager
metadata:
  name: $QMGR
  namespace: $MY_OC_PROJECT
spec:
  license:
    accept: true
    license: $MY_MQ_LIC
    use: "NonProduction"
  pki:
    keys:
      - name: $QMGR
        secret:
          secretName: ${QMGR}-secret
          items:
            - tls.key
            - tls.crt
            - ca.crt
  queueManager:
    name: $QMGR_UC
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 1Gi
    storage:
      queueManager:
        type: ephemeral
    availability:
      type: SingleInstance
    mqsc:
      - configMap:
          name: ${QMGR}-mqsc-cm
          items:
            - ${QMGR}.mqsc
  version: $MY_MQ_VERSION
  web:
    console:
      authentication:
        provider: manual
      authorization:
        provider: manual
    manualConfig:
      configMap: 
        name: ${QMGR}-mywebconfig
    enabled: true