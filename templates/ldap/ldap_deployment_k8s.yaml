apiVersion: apps/v1
kind: Deployment
metadata:
  name: $MY_LDAP_DEPLOYMENT
  namespace: $VAR_LDAP_NAMESPACE
  labels:
    app: $MY_LDAP_DEPLOYMENT
    app.kubernetes.io/component: $MY_LDAP_DEPLOYMENT
    app.kubernetes.io/instance: $MY_LDAP_DEPLOYMENT
    app.kubernetes.io/name: $MY_LDAP_DEPLOYMENT
    app.kubernetes.io/part-of: openldap
  annotations:
    deployment.kubernetes.io/revision: '1'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: $MY_LDAP_DEPLOYMENT
  template:
    metadata:
      labels:
        app: $MY_LDAP_DEPLOYMENT
        deployment: $MY_LDAP_DEPLOYMENT
    spec:
      serviceAccountName: $MY_LDAP_SERVICEACCOUNT
      containers:
        - name: $MY_LDAP_DEPLOYMENT
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          image: ${MY_LDAP_IMAGE}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 389
            - containerPort: 636
          env:
            - name: LDAP_LOG_LEVEL
              value: "256"
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: true
            privileged: true
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          volumeMounts:
            - name: ldap-db-main
              mountPath: /var/lib/ldap
            - name: ldap-db-config
              mountPath: /etc/ldap/slapd.d
      volumes:
        - name: ldap-db-main
          persistentVolumeClaim:
            claimName: ${MY_LDAP_PVC_MAIN}
        - name: ldap-db-config
          persistentVolumeClaim:
            claimName: ${MY_LDAP_PVC_CONFIG}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
#---
#spec:
#  template:
#    spec:
#      containers:
#        - name: $MY_LDAP_DEPLOYMENT
#          securityContext: 
#            allowPrivilegeEscalation: false
#            capabilities:
#              drop:
#                - ALL
#              add:
#                - NET_BIND_SERVICE
#            runAsNonRoot: true
#            seccompProfile:
#              type: RuntimeDefault
#      securityContext: 
#        runAsNonRoot: true