apiVersion: apps/v1
kind: Deployment
metadata:
  name: $MY_LDAP_DEPLOYMENT
  namespace: $VAR_LDAP_NAMESPACE
  labels:
    app: $MY_LDAP_DEPLOYMENT
    app.kubernetes.io/component: $MY_LDAP_DEPLOYMENT
    app.kubernetes.io/instance: $MY_LDAP_DEPLOYMENT
    app.kubernetes.io/name: $MY_LDAP_DEPLOYMENT
    #app.kubernetes.io/part-of: openldap
    app.openshift.io/runtime: $MY_LDAP_DEPLOYMENT
    app.openshift.io/runtime-namespace: $VAR_LDAP_NAMESPACE
    app.openshift.io/runtime-version: '1.0'
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: 'false'
    deployment.kubernetes.io/revision: '1'
    #image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"mybitnami:1.0","namespace":"ldap"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mybitnami\")].image","paused":"false"}]'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: $MY_LDAP_DEPLOYMENT
  template:
    metadata:
      labels:
        app: $MY_LDAP_DEPLOYMENT
        deployment: $MY_LDAP_DEPLOYMENT
    spec:
      containers:
        - name: $MY_LDAP_DEPLOYMENT
          image: ${MY_LDAP_IMAGE}
          imagePullPolicy: IfNotPresent
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          ports:
            - containerPort: 1389
              protocol: TCP
            - containerPort: 1636
              protocol: TCP
          env:
            - name: LDAP_LOG_LEVEL
              value: "256"
            - name: BITNAMI_DEBUG
              value: "true"
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: 
        runAsNonRoot: true
      schedulerName: default-scheduler
      serviceAccountName: $MY_LDAP_SERVICEACCOUNT
      volumes:
        - name: ldap-db-main
          persistentVolumeClaim:
            claimName: ${MY_LDAP_PVC_MAIN}
        - name: ldap-db-config
          persistentVolumeClaim:
            claimName: pvc-ldap-config
#      volumeMounts:
#        - name: ldap-db-main
#          mountPath: /var/lib/ldap
#        - name: ldap-db-config
#          mountPath: /etc/ldap/slapd.d
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
