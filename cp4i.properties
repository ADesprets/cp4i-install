# This file contains values to be provisioned by the user for a specific installation
# There is a comment Likely to change close to the values that you may want to change

# Program structure, you should not change this part
ldapdir="${mainscriptdir}ldap/"
yamldir="${mainscriptdir}templates/"
operatorsdir="${mainscriptdir}templates/operators/"
operandsdir="${mainscriptdir}templates/operands/"
operands_tmpl_customdir="${mainscriptdir}templates/operands-custom/"
operands_gen_customdir="${mainscriptdir}customisation/"
privatedir="${mainscriptdir}private/"
workingdir="${mainscriptdir}working/"

resourcedir="${mainscriptdir}templates/resources/"
aceconfigdir="${mainscriptdir}templates/configuration/ACE/"
acebardir="${resourcedir}ACE/Bar/"

# cluster definition
# Likely to change (till number of clusters)
# use either classic or vpc
my_cluster_infra=classic

# To see the supported Kubernetes versions including OpenShift, run: ibmcloud ks versions -q --show-version OpenShift
# Tested with 4.10 need to update it to 4.12
my_oc_version=4.12

# To list available zones, run: ibmcloud ks zone ls --provider (classic|vpc-classic|vpc-gen2) 
my_cluster_zone=par01 # classic
my_cluster_region=eu-de # vpc

# To list available flavors, run: ibmcloud ks flavors -q --zone $my_cluster_zone
my_cluster_flavor_classic=b3c.16x64.300gb # sur classic
my_cluster_flavor_vpc=bx2.16x64 # sur vpc

# To indicate the number of workers
my_cluster_workers=2

#SB]20231106 storage class
# For MOP cluster the storage class to use is : scale-techsales-fileset
#my_block_storage_class=scale-techsales-fileset
#my_file_storage_class=scale-techsales-fileset
my_block_storage_class=ibmc-block-gold
my_file_storage_class=ibmc-file-gold-gid
my_file_ldap_storage_class=ibmc-file-bronze

# Switch to install operators on all namespaces (openshift-operators) or ${my_oc_project} 
# Warning use the last one if not on all namespaces
operators_project=openshift-operators

# Name of the namespace of openshift market place used to define sourceNamespace
my_oc_cs_ns=openshift-marketplace

#SB]20230201 namespace for instana agent
my_instana_agent_project=instana-agent

# load specific versions for cp4i
. ${mainscriptdir}versions/cp4i-2023.2

# Name of created objects for the installation
my_cp_navigator_instance_name=${my_oc_project}-navigator
my_cp_ace_dashboard_instance_name=${my_oc_project}-ace-db
my_cp_ace_designer_instance_name=${my_oc_project}-ace-dg
my_cp_apic_instance_name=${my_oc_project}-apic
my_cp_ar_instance_name=${my_oc_project}-ar
my_cp_es_instance_name=${my_oc_project}-es
my_cp_hsts_instance_name=${my_oc_project}-hsts
my_cp_mq_instance_name=${my_oc_project}-mq
my_cp_intassembly_instance_name=${my_oc_project}-ia
my_ev_eem_instance_name=${my_oc_project}-eem
my_ev_gw_instance_name=${my_oc_project}-evgw
my_ev_gw_instance_grp_name=${my_oc_project}-evgwgrp
my_ev_gw_instance_name=${my_oc_project}-evgw
my_ev_flink_instance_name=${my_oc_project}-evf
my_ev_ep_instance_name=${my_oc_project}-evp

#SB]20230130 Adding Nexus and JFRog Repositories
my_nexus_instance_name=${my_oc_project}-nexus
my_nexus_route_name=${my_oc_project}-nexus-route
my_nexus_repository=maven-releases
my_jfrog_instance_name=${my_oc_project}-jfrog
my_jfrog_route_name=${my_oc_project}-jfrog-route
my_install_nexus=false
my_install_jfrog=false

#SB]20230201 instana
my_unique_instana_suffix=`whoami`
my_instana_agent_instance_name=instana-agent
my_instana_agent_cm_name=instana-agent
my_instana_zone_name=${my_oc_project}-instana-${my_unique_instana_suffix}
my_instana_cluster_name=${my_oc_project}-instana-${my_unique_instana_suffix}-cluster
my_instana_agent_operator=false

# These two ConfigMaps are used to configure ES metrics
my_cp_es_kafka_metricsConfig_name=${my_oc_project}-prod-3-brokers-metrics-config

# Important: this is where you define what you want to install
# Likely to change (till choice of install DataPower)

my_ibm_navigator=true
my_ibm_appconnect=true
my_ibm_apiconnect=true
my_ibm_asset_repository=true
my_ibm_aspera_hsts=false
my_ibm_eventstreams=true
my_ibm_mq=true
my_ibm_datapower=false
my_ibm_eventendpointmanagement=true
my_ibm_eventgateway=true
my_ibm_eventautomation_flink=true
my_ibm_eventprocessing=true

# Important: this is where you define if you want to customise each component
# Likely to change (till customisation of DataPower)
my_customisation_ldap=false
my_customisation_navigator=false
my_customisation_appconnect=false
my_customisation_apiconnect=false
my_customisation_asset_repository=false
my_customisation_aspera_hsts=false
my_customisation_mq=false
my_customisation_datapower=false
my_customisation_eventendpointmanagement=true
my_customisation_eventprocessing=true
my_customisation_eventstreams=true

# SB]20231026 operands customisation directories and files
# tmpl custom dirs
ace_tmpl_customdir="${operands_tmpl_customdir}ACE/"
apic_tmpl_customdir="${operands_tmpl_customdir}APIC/"
ar_tmpl_customdir="${operands_tmpl_customdir}AR/"
aspera_tmpl_customdir="${operands_tmpl_customdir}ASPERA/"

eem_tmpl_customdir="${operands_tmpl_customdir}EEM/"
eem_tmpl_config_customdir="${eem_tmpl_customdir}config/"
eem_tmpl_scripts_customdir="${eem_tmpl_customdir}scripts/"

ep_tmpl_customdir="${operands_tmpl_customdir}EP/"
ep_tmpl_config_customdir="${ep_tmpl_customdir}config/"
ep_tmpl_scripts_customdir="${ep_tmpl_customdir}scripts/"

es_tmpl_customdir="${operands_tmpl_customdir}ES/"
mq_tmpl_customdir="${operands_tmpl_customdir}MQ/"

# gen custom dirs
ace_gen_customdir="${operands_gen_customdir}ACE/"
apic_gen_customdir="${operands_gen_customdir}APIC/"
ar_gen_customdir="${operands_gen_customdir}AR/"
aspera_gen_customdir="${operands_gen_customdir}ASPERA/"

eem_gen_customdir="${operands_gen_customdir}EEM/"
eem_gen_config_customdir="${eem_gen_customdir}config/"
eem_gen_scripts_customdir="${eem_gen_customdir}scripts/"

ep_gen_customdir="${operands_gen_customdir}EP/"
ep_gen_config_customdir="${ep_gen_customdir}config/"
ep_gen_scripts_customdir="${ep_gen_customdir}scripts/"

es_gen_customdir="${operands_gen_customdir}ES/"

mq_gen_customdir="${operands_gen_customdir}MQ/"

# tmpl custom files
eem_tmpl_user_credentials_customfile="${eem_tmpl_config_customdir}user-credentials.yaml"
eem_tmpl_user_roles_customfile="${eem_tmpl_config_customdir}user-roles.yaml"

ep_tmpl_user_credentials_customfile="${ep_tmpl_config_customdir}user-credentials.yaml"
ep_tmpl_user_roles_customfile="${ep_tmpl_config_customdir}user-roles.yaml"

# gen custom files
eem_gen_user_credentials_customfile="${eem_gen_customdir}/config/user-credentials.yaml"
eem_gen_user_roles_customfile="${eem_gen_customdir}/config/user-roles.yaml"

ep_gen_user_credentials_customfile="${ep_gen_customdir}/config/user-credentials.yaml"
ep_gen_user_roles_customfile="${ep_gen_customdir}/config/user-roles.yaml"

# This is used force the load of the CASE
# It takes a lot of time, so if you have already loaded the cases, then you can switch to false when re-running the script on the existing cluster from the same machine.
# Likely to change
my_ibm_pak=true

# Switch to use or not the Integration Assembly (To deploy multiple instances of other IBM Cloud PakÂ® for Integration capabilities and components from the same YAML file)
my_ibm_intassembly=false

#SB]20230214 Ajout des variables de configuration ACE
my_ace_barauth_secret=${my_oc_project}-ace-barauth-secret
my_ace_barauth=${my_oc_project}-ace-barauth
my_ace_is=${my_oc_project}-ace-is

my_maven2_groupid=${my_oc_project}.ace
my_maven2_asset_version=1.0.0
my_maven2_type=application/bar-archive

my_install_openldap=true
# license file to use
my_aspera_license_file="${privatedir}aspera-license"

# other information for optional components
## LDAP
# namespaces
my_ldap_namespace=ldap
# DN of the administrator for openldap driven by the image default values provided
my_dn_openldap=cn=admin,dc=example,dc=com
# Name of the organisation to prefix entries in the DIT (Directory Informtion Tree) substituted during installation
my_org_openldap=ibm
# uid of the user who ... substituted during installation
my_developer_uid=dev1

# save json in file apikey.json : ibm cloud api key created from IBM Cloud->Manage->IAM->API Keys
# https://cloud.ibm.com/iam/apikeys
my_ic_apikey=$(jq -r .apikey < "${privatedir}apikey.json")

# save key in file from https://myibm.ibm.com/ -> container software library
# https://myibm.ibm.com/products-services/containerlibrary
my_entitlement_key=$(cat "${privatedir}ibm_container_entitlement_key.txt")
