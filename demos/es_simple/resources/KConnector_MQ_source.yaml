apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaConnector
metadata:
  labels:
        eventstreams.ibm.com/cluster: $VAR_ES_KAFKA_CONNECT_INSTANCE_NAME
  name: mq-source
  namespace: $VAR_ES_NAMESPACE
spec:
  class: com.ibm.eventstreams.connect.mqsource.MQSourceConnector
  tasksMax: 2
  config:
    # Connection details (type SVRCONN)
    mq.channel.name: $VAR_CHL_UC
    mq.connection.mode: client
    mq.connection.name.list: ${VAR_QMGR_LC}-ibm-mq.${VAR_MQ_NAMESPACE}.svc.cluster.local(1414)
    mq.ssl.cipher.suite: '*TLS12ORHIGHER'
    # How do I add the TLS cert from MQ to the connector ?
    mq.ssl.truststore.location: "/mnt/mqca/truststore.jks" # The path to the JKS truststore to use for SSL (TLS) connections.
    mq.ssl.truststore.password: "$VAR_ES_MQ_SOURCE_STORE_PASSWORD" # The password of the JKS truststore to use for SSL (TLS) connections.
    # Source QM name
    mq.queue.manager: $VAR_QMGR_LC
    # the MQ queue to get messages from (Streaming Queue) for example PAYMT.REQ.CPY
    mq.queue: $VAR_ES_MQ_SOURCE 
     # the Kafka topic to produce to for example LH.ORDERS
    topic: $VAR_ES_TOPIC_DEST
    # format of the messages to transfer
    mq.message.body.jms: true 
    mq.record.builder: com.ibm.eventstreams.connect.mqsource.builders.DefaultRecordBuilder
    key.converter: org.apache.kafka.connect.storage.StringConverter
    # For the values could be JsonConverter
    value.converter: org.apache.kafka.connect.storage.StringConverter

    # whether to send the schema with the messages
    key.converter.schemas.enable: false
    value.converter.schemas.enable: false

    # We disable topic authentication for this demo, possible because of the CHCKCLNT(OPTIONAL)
    mq.user.authentication.mqcsp: false
    mq.user.name: ""
    mq.password: ""